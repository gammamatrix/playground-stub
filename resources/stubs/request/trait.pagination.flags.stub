<?php
/**
 * {{organization}}
 */

namespace {{ namespace }};

/**
 * \{{ namespace }}\PaginationFlagsTrait
 */
trait PaginationFlagsTrait
{
    protected array $paginationFlags = [
        'active' => ['column' => 'active', 'label' => 'Active', 'icon' => 'fa-solid fa-person-running'],
        // 'canceled' => ['column' => 'canceled', 'label' => 'Canceled', 'icon' => 'fa-solid fa-ban text-warning'],
        // 'closed' => ['column' => 'closed', 'label' => 'Closed', 'icon' => 'fa-solid fa-xmark'],
        // 'completed' => ['column' => 'completed', 'label' => 'Completed', 'icon' => 'fa-solid fa-check'],
        // 'duplicate' => ['column' => 'duplicate', 'label' => 'Duplicate', 'icon' => 'fa-solid fa-clone'],
        // 'fixed' => ['column' => 'fixed', 'label' => 'Fixed', 'icon' => 'fa-solid fa-wrench'],
        // 'flagged' => ['column' => 'flagged', 'label' => 'Flagged', 'icon' => 'fa-solid fa-flag'],
        // 'internal' => ['column' => 'internal', 'label' => 'Internal', 'icon' => 'fa-solid fa-server'],
        'locked' => ['column' => 'locked', 'label' => 'Locked', 'icon' => 'fa-solid fa-lock text-warning'],
        // 'pending' => ['column' => 'pending', 'label' => 'Pending', 'icon' => 'fa-solid fa-circle-pause text-warning'],
        // 'planned' => ['column' => 'planned', 'label' => 'Planned', 'icon' => 'fa-solid fa-circle-pause text-success'],
        // 'problem' => ['column' => 'problem', 'label' => 'Problem', 'icon' => 'fa-solid fa-triangle-exclamation text-danger'],
        // 'published' => ['column' => 'published', 'label' => 'Published', 'icon' => 'fa-solid fa-book'],
        // 'released' => ['column' => 'released', 'label' => 'Released', 'icon' => 'fa-solid fa-dove'],
        // 'retired' => ['column' => 'retired', 'label' => 'Retired', 'icon' => 'fa-solid fa-chair text-success'],
        // 'resolved' => ['column' => 'resolved', 'label' => 'Resolved', 'icon' => 'fa-solid fa-check-double text-success'],
        // 'suspended' => ['column' => 'suspended', 'label' => 'Suspended', 'icon' => 'fa-solid fa-hand text-danger'],
        // 'unknown' => ['column' => 'unknown', 'label' => 'Unknown', 'icon' => 'fa-solid fa-question text-warning'],
        // 'only_admin' => ['column' => 'only_admin', 'label' => 'Only Admin', 'icon' => 'fa-solid fa-user-gear'],
        // 'only_user' => ['column' => 'only_user', 'label' => 'Only User', 'icon' => 'fa-solid fa-user'],
        // 'only_guest' => ['column' => 'only_guest', 'label' => 'Only Guest', 'icon' => 'fa-solid fa-person-rays'],
        // 'allow_public' => ['column' => 'allow_public', 'label' => 'Allow Public', 'icon' => 'fa-solid fa-users-line'],
    ];

    public function getPaginationFlags(): array
    {
        return $this->paginationFlags;
    }

    public function rules_filters_flags(array &$rules): void
    {
        foreach ($this->getPaginationFlags() as $column => $meta) {

            if (empty($column) || ! is_string($column)) {
                continue;
            }

            $rule_key = sprintf('filter.%1$s', $column);

            $nullable = array_key_exists('nullable', $meta) && is_bool($meta['nullable']) ? $meta['nullable'] : true;

            $set_rules = [];

            if ($nullable) {
                $set_rules[] = 'nullable';
            }

            $set_rules[] = 'boolean';

            $rules[$rule_key] = $set_rules;
        }
    }
}
